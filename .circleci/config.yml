# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1





jobs:
  # Build
  build:
    docker:
      - image: circleci/openjdk:11-jdk-stretch
    steps:
      - checkout
      - restore_cache:
          key: synapse-{{ checksum "pom.xml" }}
      - run: mvn -B clean package -DskipTests
      - save_cache: # saves the project dependencies
          paths:
            - ~/.m2
          key: synapse-{{ checksum "pom.xml" }}
      - run: mvn clean install -DskipTests
      - run: echo ${MAVEN_REPO_USERNAME}
      - run: echo ${MAVEN_REPO_PASSWORD}
      - run: mvn --settings ".circle.settings.xml" -DskipTests deploy -P release

  # Test
  test:
    parallelism: 2 # parallel containers to split the tests among
    docker:
      - image: circleci/openjdk:11-jdk-stretch
    steps:
      - checkout
      - run: mvn test
      - store_test_results: # We use this timing data to optimize the future runs
          path: target/surefire-reports

  # Deploy
  deploy:
    docker:
      - image: circleci/openjdk:11-jdk-stretch
    #        auth:
    #          username: mydockerhub-user
    #          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
    steps:
      - run: echo ${MAVEN_REPO_USERNAME}
      - run: echo ${MAVEN_REPO_PASSWORD}
      - run: mvn --settings ".circle.settings.xml" -DskipTests deploy -P release


workflows_setup:
  - &context
    context:
      - maven_central_credentials
      - code_signing_credentials

  - &default_branch
      "main"


# Workflows that will schedule and execute jobs.
workflows:
  build-test-deploy:
    jobs:
      - build
      #      - test:
      #          requires:
      #            - build
      - deploy:
          requires:
            - build
#            - test